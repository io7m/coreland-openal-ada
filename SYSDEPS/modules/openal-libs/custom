#!/bin/sh

. "${SYSDEP_SUBS_FILE}" || exit 1

exec 1> "$1"

case ${SYSDEP_OS} in
  SD_SYSINFO_OS_DARWIN)
    ${SYSDEP_UTIL_ECHO} "-framework OpenAL"
    ${SYSDEP_UTIL_EXIT} 0
    ;;
  SD_SYSINFO_OS_MS_WINDOWS)
    #
    # OpenAL32.dll is most likely in C:/WINDOWS/system32 as that's where
    # the SDK 'redist' installer puts it (oalinst.exe). However, using
    # -LC:/WINDOWS/system32 -lOpenAL32 causes massive problems with most
    # linkers. Instead, just print the path to the DLL file and hope for
    # the best.
    #
    DIRECTORY=`${SYSDEP_TRY_MANUAL} "OpenAL32.dll" "${SYSDEP_STDLIB}" "" 2>&-`
    if [ ! -z "${DIRECTORY}" ]
    then
      ${SYSDEP_UTIL_ECHO} "${DIRECTORY}" | ${SYSDEP_UTIL_SED} 's/ *$/\/OpenAL32.dll/g'
      ${SYSDEP_UTIL_EXIT} 0
    else
      SYSDEP_ERROR "non-standard manual search failed"
    fi

    pkg="openal"
    args="-l${pkg}"
    lib="${pkg}.${SYSDEP_LIBSUFFIX}"
    ;;
  *)
    pkg="openal"
    args="-l${pkg}"
    lib="lib${pkg}.${SYSDEP_LIBSUFFIX}"
    ;;
esac

FLAGS=`${SYSDEP_TRY_CONFIG_BIN} "openal-config" "--libs"`
if [ $? -eq 0 ]
then
  ${SYSDEP_UTIL_ECHO} ${FLAGS}
  ${SYSDEP_UTIL_EXIT} 0
fi
SYSDEP_ERROR "custom configuration binary failed"

FLAGS=`${SYSDEP_TRY_PKG_CONFIG} "${pkg}" "--libs"`
if [ $? -eq 0 ]
then
  ${SYSDEP_UTIL_ECHO} ${FLAGS}
  ${SYSDEP_UTIL_EXIT} 0
else
  SYSDEP_ERROR "custom pkg-config failed"
fi

FLAGS=`${SYSDEP_TRY_MANUAL} "${lib}" "${SYSDEP_STDLIB}" "-L" 2>&-`
if [ ! -z "${FLAGS}" ]
then
  ${SYSDEP_UTIL_ECHO} ${FLAGS} ${args}
  ${SYSDEP_UTIL_EXIT} 0
else
  SYSDEP_ERROR "manual search failed"
fi

${SYSDEP_UTIL_EXIT} 1
